openapi: 3.0.0
info:
  title: Fluxion API
  description: |
    ## What is Fluxion 
    
    Fluxion is an imagined company that enabled **relativistic code collaboration**.

    This is an example of how to include an OpenAPI spec file into Doctave.

  version: 1.2.3
tags:
  - name: Time Dilation
  - name: Code Collaboration
  - name: Project Management
  - name: User Management
paths:
  /projects/{projectId}/timeDilation:
    post:
      tags:
        - Time Dilation
      summary: Create a new time-dilation instance for a project
      description: Creates a new time-dilation instance for a specific project. This instance affects the perceived timeline for the code files in the project.
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeDilation'
            examples:
              default:
                value:
                  dilationFactor: 2.0
      responses:
        '201':
          description: Time-dilation instance created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeDilation'
              examples:
                default:
                  value:
                    id: "td123"
                    projectId: "p456"
                    state: "ACTIVE"
                    dilationFactor: 2.0
                    creationDate: "2023-07-24T18:00:00Z"
        '400':
          description: Bad request
  /projects/{projectId}/timeDilation/{timeDilationId}:
    get:
      tags:
        - Time Dilation
      summary: Get a time-dilation instance by ID
      description: Retrieves information about a specific time-dilation instance.
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: timeDilationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A time-dilation instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeDilation'
              examples:
                default:
                  value:
                    id: "td123"
                    projectId: "p456"
                    state: "ACTIVE"
                    dilationFactor: 2.0
                    creationDate: "2023-07-24T18:00:00Z"
        '404':
          description: Time-dilation instance not found
    put:
      summary: Update a time-dilation instance by ID
      description: Updates the dilation factor of a time-dilation instance, effectively controlling the perceived timeline for the code files.
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: timeDilationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeDilation'
            examples:
              default:
                value:
                  dilationFactor: 3.0
      responses:
        '200':
          description: Time-dilation instance updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeDilation'
              examples:
                default:
                  value:
                    id: "td123"
                    projectId: "p456"
                    state: "ACTIVE"
                    dilationFactor: 3.0
                    creationDate: "2023-07-24T18:00:00Z"
        '400':
          description: Bad request
        '404':
          description: Time-dilation instance not found
    delete:
      tags:
        - Time Dilation
      summary: Delete a time-dilation instance by ID
      description: Deletes a specific time-dilation instance.
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: timeDilationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Time-dilation instance deleted
        '404':
          description: Time-dilation instance not found
  /projects/{projectId}/collaborations:
    post:
      tags:
        - Code Collaboration
      summary: Create a new code collaboration session
      description: Initiates a new code collaboration session for a project, allowing developers to work together in a shared development environment.
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaboration'
            examples:
              default:
                value:
                  participants: ["dev1", "dev2", "dev3"]
      responses:
        '201':
          description: Code collaboration session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
              examples:
                default:
                  value:
                    id: "c123"
                    projectId: "p456"
                    participants: ["dev1", "dev2", "dev3"]
                    active: true
                    creationDate: "2023-07-24T18:00:00Z"
        '400':
          description: Bad request
  /projects/{projectId}/collaborations/{collaborationId}:
    get:
      tags:
        - Code Collaboration
      summary: Get a code collaboration session by ID
      description: Retrieves information about a specific code collaboration session.
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: collaborationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A code collaboration session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
              examples:
                default:
                  value:
                    id: "c123"
                    projectId: "p456"
                    participants: ["dev1", "dev2", "dev3"]
                    active: true
                    creationDate: "2023-07-24T18:00:00Z"
        '404':
          description: Collaboration session not found
    put:
      tags:
        - Code Collaboration
      summary: Update a code collaboration session by ID
      description: Updates the participants of a code collaboration session, adding or removing developers as needed.
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: collaborationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collaboration'
            examples:
              default:
                value:
                  participants: ["dev1", "dev4"]
      responses:
        '200':
          description: Code collaboration session updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
              examples:
                default:
                  value:
                    id: "c123"
                    projectId: "p456"
                    participants: ["dev1", "dev4"]
                    active: true
                    creationDate: "2023-07-24T18:00:00Z"
        '400':
          description: Bad request
        '404':
          description: Collaboration session not found
    delete:
      tags:
        - Code Collaboration
      summary: Delete a code collaboration session by ID
      description: Ends a specific code collaboration session.
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
        - name: collaborationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Collaboration session ended
        '404':
          description: Collaboration session not found
  # Project Management
  /projects:
    post:
      tags:
        - Project Management
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
            examples:
              default:
                value:
                  name: "Awesome Project"
                  description: "A project that is truly awesome."
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /projects/{projectId}:
    get:
      tags:
        - Project Management
      summary: Get project by ID
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    put:
      tags:
        - Project Management
      summary: Update a project by ID
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      tags:
        - Project Management
      summary: Delete a project by ID
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Project deleted

  # User Management
  /users:
    post:
      tags:
        - User Management
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              default:
                value:
                  username: "john_doe"
                  email: "john.doe@example.com"
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      tags:
        - User Management
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - User Management
      summary: Update a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - User Management
      summary: Delete a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted

components:
  schemas:
    TimeDilation:
      type: object
      properties:
        id:
          type: string
        projectId:
          type: string
        state:
          type: string
          enum: [ACTIVE, INACTIVE]
        dilationFactor:
          type: number
        creationDate:
          type: string
          format: date-time
    Collaboration:
      type: object
      properties:
        id:
          type: string
        projectId:
          type: string
        participants:
          type: array
          items:
            type: string
        active:
          type: boolean
        creationDate:
          type: string
          format: date-time
    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string

